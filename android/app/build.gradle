plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystorePropertiesFile = rootProject.file("app/keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    namespace = "com.example.demoproject"
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

defaultConfig {
    applicationId "com.example.demoproject"
    minSdkVersion 27
    targetSdkVersion flutter.targetSdkVersion ?: 33
    versionCode project.hasProperty("flutterVersionCode") ? flutterVersionCode.toInteger() : 1
    versionName project.hasProperty("flutterVersionName") ? flutterVersionName : "1.0.0"
}


             //Don't Change Signing Configs below.
signingConfigs {
    release {
        keyAlias keystoreProperties.getProperty('keyAlias')
        keyPassword keystoreProperties.getProperty('keyPassword')
        storeFile keystoreProperties.getProperty('storeFile') ? file(keystoreProperties.getProperty('storeFile')) : null
        storePassword keystoreProperties.getProperty('storePassword')
    }
}

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.release
        }
    }
}

flutter {
    source = "../.."
}
